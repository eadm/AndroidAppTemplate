[versions]
androidGradlePlugin = '7.0.3'
kotlin = '1.5.30'

dexcount = '1.0.3'

dagger = '2.33'

androidx = '1.3.0'
ktx = '1.6.0'
viewPager = '1.0.0'
recyclerview = '1.2.1'
cardView = '1.0.0'
archComponents = '2.2.0'
constraintLayout = '2.0.4'
material = '1.3.0'
flexbox = '1.1.0'
calendarView = '0.2.8'
panoramaView = '1.0'
permissionDispatcher = '4.3.1'
fragment = '1.3.5'
viewBindingDelegate = '1.3.1'

adapterDelegates = '1.1.0'
adapters = '1.1.0'
presentationRedux = '1.1.0'
presentationReduxCoroutines = '1.2.0'
viewUI = '1.0.11'
viewRedux = '1.0.8'
viewNavigation = '1.0.2'
viewInjection = '1.0.1'
model = '1.0.6'

cicerone = '7.1'

kotpref = '2.9.2'

retrofit = '2.9.0'
kotlinSerialization = '1.3.0'
kotlinSerializationAdapter = '0.8.0'

glide = '4.12.0'
glideTransformations = '4.3.0'

junit = '4.13.2'
robolectric = '4.5.1'
mockito = '2.23.4'
mockitoKt = '2.2.0'

ktlint = '0.37.1'
ktlintRules = '1.0.0'

room = '2.3.0'
security = '1.1.0-alpha03'
sqlcipher = '4.4.0'

flipper = '0.49.0'
soloader = '0.10.1'

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-kotlinSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
plugin-android = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
plugin-dexcount = { module = "com.getkeepsafe.dexcount:dexcount-gradle-plugin", version.ref = "dexcount" }

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinPlg = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler",  version.ref = "dagger" }

appCompat = { module = "androidx.appcompat:appcompat",  version.ref = "androidx"}
ktx = { module = "androidx.core:core-ktx", version.ref = "ktx" }
viewPager = { module = "androidx.viewpager:viewpager", version.ref = "viewPager" }
recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
cardView = { module = "androidx.cardview:cardview", version.ref = "cardView" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
material = { module = "com.google.android.material:material", version.ref = "material" }
flexbox = { module = "com.google.android:flexbox", version.ref = "flexbox" }
fragment = { module = "androidx.fragment:fragment", version.ref = "fragment" }
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
viewBindingDelegate = { module = "com.kirich1409.viewbindingpropertydelegate:vbpd-noreflection", version.ref = "viewBindingDelegate" }

#AndroidKit
adapterDelegates = { module = "ru.nobird.android.ui:adapter-delegates", version.ref = "adapterDelegates" }
adapters = { module = "ru.nobird.android.ui:adapters", version.ref = "adapters" }
presentationRedux = { module = "ru.nobird.android.presentation:redux", version.ref = "presentationRedux" }
presentationReduxCoroutines = { module = "ru.nobird.android.presentation:redux-coroutines", version.ref = "presentationReduxCoroutines" }
viewUI = { module = "ru.nobird.android.view:ui", version.ref = "viewUI" }
viewRedux = { module = "ru.nobird.android.view:redux", version.ref = "viewRedux" }
viewNavigation = { module = "ru.nobird.android.view:navigation", version.ref = "viewNavigation" }
viewInjection = { module = "ru.nobird.android.view:injection", version.ref = "viewInjection" }
model = { module = "ru.nobird.android.core:model", version.ref = "model" }

permissionDispatcher = { module = "org.permissionsdispatcher:permissionsdispatcher", version.ref = "permissionDispatcher" }
permissionDispatcherProcessor = { module = "org.permissionsdispatcher:permissionsdispatcher-processor", version.ref = "permissionDispatcher" }

kotpref = { module = "com.chibatching.kotpref:kotpref", version.ref = "kotpref" }
kotprefAutoInit = { module = "com.chibatching.kotpref:initializer", version.ref = "kotpref" }

cicerone = { module = "com.github.terrakok:cicerone", version.ref = "cicerone" }

archExtensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "archComponents" }
archViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "archComponents" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

kotlinSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }
kotlinSerializationAdapter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "kotlinSerializationAdapter" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glideTransformations = { module = "jp.wasabeef:glide-transformations", version.ref = "glideTransformations" }

junit = { module = "junit:junit", version.ref = "junit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockitoKt = { module = "com.nhaarman.mockitokotlin2:mockito-kotlin", version.ref = "mockitoKt" }

ktlint = { module = "com.pinterest:ktlint", version.ref = "ktlint" }
ktlintRules = { module = "ru.nobird.android.ktlint:rules", version.ref = "ktlintRules" }

security = { module = "androidx.security:security-crypto", version.ref = "security" }
sqlcipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "sqlcipher" }

roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }

flipper = { module = "com.facebook.flipper:flipper", version.ref = "flipper" }
flipperNetwork = { module = "com.facebook.flipper:flipper-network-plugin", version.ref = "flipper" }
soloader = { module = "com.facebook.soloader:soloader", version.ref = "soloader" }

[bundles]
androidKit = [
    'adapterDelegates', 'adapters',
    'presentationRedux', 'presentationReduxCoroutines',
    'viewUI', 'viewRedux', 'viewNavigation', 'viewInjection',
    'model'
]
flipperDebug = ['flipper', 'flipperNetwork', 'soloader']